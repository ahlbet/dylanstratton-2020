

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."daily" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text",
    "coherency_level" integer DEFAULT 1,
    "cover_art" "text",
    "date" "date"
);


ALTER TABLE "public"."daily" OWNER TO "postgres";


COMMENT ON TABLE "public"."daily" IS 'Daily blog posts';



CREATE TABLE IF NOT EXISTS "public"."daily_audio" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "daily_id" bigint,
    "storage_path" "text",
    "duration" integer,
    "format" "text" DEFAULT 'audio/wav'::"text",
    "coherency_level" integer DEFAULT 1
);


ALTER TABLE "public"."daily_audio" OWNER TO "postgres";


COMMENT ON TABLE "public"."daily_audio" IS 'Audio for blog posts';



ALTER TABLE "public"."daily_audio" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."daily_audio_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."daily" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."daily_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."markov_texts" (
    "id" integer NOT NULL,
    "text_content" "text" NOT NULL,
    "text_length" integer NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "metadata" "jsonb" DEFAULT '{}'::"jsonb",
    "edited" boolean DEFAULT false,
    "coherency_level" integer DEFAULT 1,
    "daily_id" bigint
);


ALTER TABLE "public"."markov_texts" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."markov_texts_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "public"."markov_texts_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."markov_texts_id_seq" OWNED BY "public"."markov_texts"."id";



ALTER TABLE ONLY "public"."markov_texts" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."markov_texts_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."daily_audio"
    ADD CONSTRAINT "daily_audio_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."daily"
    ADD CONSTRAINT "daily_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."daily"
    ADD CONSTRAINT "daily_title_key" UNIQUE ("title");



ALTER TABLE ONLY "public"."markov_texts"
    ADD CONSTRAINT "markov_texts_pkey" PRIMARY KEY ("id");



CREATE INDEX "idx_markov_texts_edited" ON "public"."markov_texts" USING "btree" ("edited");



CREATE INDEX "idx_markov_texts_length" ON "public"."markov_texts" USING "btree" ("text_length");



CREATE INDEX "idx_markov_texts_random" ON "public"."markov_texts" USING "btree" ("id");



ALTER TABLE ONLY "public"."daily_audio"
    ADD CONSTRAINT "daily_audio_daily_id_fkey" FOREIGN KEY ("daily_id") REFERENCES "public"."daily"("id");



ALTER TABLE ONLY "public"."markov_texts"
    ADD CONSTRAINT "markov_texts_daily_id_fkey" FOREIGN KEY ("daily_id") REFERENCES "public"."daily"("id");



CREATE POLICY "Anyone can view all markov_texts" ON "public"."markov_texts" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."daily" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."daily_audio" FOR SELECT USING (true);



ALTER TABLE "public"."daily" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."daily_audio" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."markov_texts" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."daily" TO "anon";
GRANT ALL ON TABLE "public"."daily" TO "authenticated";
GRANT ALL ON TABLE "public"."daily" TO "service_role";



GRANT ALL ON TABLE "public"."daily_audio" TO "anon";
GRANT ALL ON TABLE "public"."daily_audio" TO "authenticated";
GRANT ALL ON TABLE "public"."daily_audio" TO "service_role";



GRANT ALL ON SEQUENCE "public"."daily_audio_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."daily_audio_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."daily_audio_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."daily_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."daily_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."daily_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."markov_texts" TO "anon";
GRANT ALL ON TABLE "public"."markov_texts" TO "authenticated";
GRANT ALL ON TABLE "public"."markov_texts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."markov_texts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."markov_texts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."markov_texts_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
